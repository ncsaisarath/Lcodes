You are given an array nums of non-negative integers. nums is considered special if there exists a number x such that there are exactly x numbers in nums that are greater than or equal to x.

Notice that x does not have to be an element in nums.

Return x if the array is special, otherwise, return -1. It can be proven that if nums is special, the value for x is unique.

 

Example 1:

Input: nums = [3,5]
Output: 2
Explanation: There are 2 values (3 and 5) that are greater than or equal to 2.

Example 2:

Input: nums = [0,0]
Output: -1
Explanation: No numbers fit the criteria for x.
If x = 0, there should be 0 numbers >= x, but there are 2.
If x = 1, there should be 1 number >= x, but there are 0.
If x = 2, there should be 2 numbers >= x, but there are 0.
x cannot be greater since there are only 2 numbers in nums.

Example 3:

Input: nums = [0,4,3,0,4]
Output: 3
Explanation: There are 3 values that are greater than or equal to 3.

 

Constraints:

    1 <= nums.length <= 100
    0 <= nums[i] <= 1000



class Solution {
    public int specialArray(int[] nums) {
        int n = nums.length;
        int l = 1,r = n;
        while(l <= r){
            int mid = l+(r-l)/2;
            int num = find(nums,mid);
            if(num == mid){
                return num;
            }else if(num > mid){
                l = mid+1;
            }else{
                r = mid-1;
            }
        }
        return -1;
    }
    int find(int[] nums,int target){
        int num = 0;
        for(int i : nums){
            if(i >= target){
                num++;
            }
        }
        return num;
    }
}


class Solution {
    public int specialArray(int[] nums) {
        int[] count = new int[1001];
        int max=-1;
        int total=nums.length;
        for(int x:nums){
            count[x]++;
            if(x>max)
                max=x;
        }
        int left=count[0];
        for(int i=1;i<=max;i++){
            if(i==total-left)
                return i;
            left+=count[i];
        }
        return -1;
        
    }
}


class Solution {
    public int specialArray(int[] nums) {
        
        Arrays.sort(nums);
        int n = nums.length ;
        for(int i = 0 ; i < n ; i++){
            if(n-i <= nums[i] & ( i == 0 || n-i > nums[i-1])){
                return n-i;
            }
            
        }
        
        return -1;
    }
}
