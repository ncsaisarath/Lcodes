You are given a string num representing a large integer. An integer is good if it meets the following conditions:

    It is a substring of num with length 3.
    It consists of only one unique digit.

Return the maximum good integer as a string or an empty string "" if no such integer exists.

Note:

    A substring is a contiguous sequence of characters within a string.
    There may be leading zeroes in num or a good integer.

 

Example 1:

Input: num = "6777133339"
Output: "777"
Explanation: There are two distinct good integers: "777" and "333".
"777" is the largest, so we return "777".

Example 2:

Input: num = "2300019"
Output: "000"
Explanation: "000" is the only good integer.

Example 3:

Input: num = "42352338"
Output: ""
Explanation: No substring of length 3 consists of only one unique digit. Therefore, there are no good integers.

 

Constraints:

    3 <= num.length <= 1000
    num only consists of digits.



class Solution {
    public String largestGoodInteger(String num) {
        String[] arr = {"999", "888", "777", "666", "555", "444", 
                        "333", "222", "111", "000"};
        
        for(String s:arr){
            if(num.indexOf(s)>=0){
                return s;
            }
        }
        return "";
    }
}



class Solution {
    public String largestGoodInteger(String s) {
        int index = -1;
        char c = '0' - 1;
        for (int i = 0; i < s.length() - 2; i++) {
            if (s.charAt(i) == s.charAt(i + 1)) {
                if (s.charAt(i) == s.charAt(i + 2)) {
                    if (s.charAt(i) > c) {
                        c = s.charAt(i);
                        index = i;
                    }
                    i += 2;
                    continue;
                } else {
                    i += 1;
                    continue;
                }
            }
        }
        return index == -1 ? "" : s.substring(index, index + 3);
    }
}




class Solution {
    public String largestGoodInteger(String num) {
        int count=1;
        int max=-1;
        for(int i=0;i<num.length()-1;i++){
            if(num.charAt(i+1)==num.charAt(i)){
                count++;
                if(count==3 ){
                    int temp=Integer.parseInt(num.substring(i-1,i+2));
                    if(temp>max)
                        max=temp;
                }
            }else
                count=1;
                
            
        }
        return (max==0)?"000":(max==-1)?"":String.valueOf(max);
    }
}
