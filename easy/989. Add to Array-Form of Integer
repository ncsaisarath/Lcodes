989. Add to Array-Form of Integer
Easy

The array-form of an integer num is an array representing its digits in left to right order.

    For example, for num = 1321, the array form is [1,3,2,1].

Given num, the array-form of an integer, and an integer k, return the array-form of the integer num + k.

 

Example 1:

Input: num = [1,2,0,0], k = 34
Output: [1,2,3,4]
Explanation: 1200 + 34 = 1234

Example 2:

Input: num = [2,7,4], k = 181
Output: [4,5,5]
Explanation: 274 + 181 = 455

Example 3:

Input: num = [2,1,5], k = 806
Output: [1,0,2,1]
Explanation: 215 + 806 = 1021

 

Constraints:

    1 <= num.length <= 10^4
    0 <= num[i] <= 9
    num does not contain any leading zeros except for the zero itself.
    1 <= k <= 10^4




class Solution {
    public List<Integer> addToArrayForm(int[] num, int k) {
        int carry = 0;
        int next;
        int index = num.length - 1;
        while(k > 0 && index >= 0) {
            next = num[index] + k % 10 + carry;
            if (next > 9) {
                num[index] = next % 10;
                carry = next / 10;
            } else {
                num[index] = next;
                carry = 0;
            }
            k = k / 10;
            index--;
        }
        
        while(index >= 0 && carry > 0) {
            next = num[index] + carry;
            if (next > 9) {
                num[index] = next % 10;
                carry = next / 10;
            } else {
                num[index] = next;
                carry = 0;
            }
            index--;
        }
        
        List<Integer> res = new ArrayList<>();
        while(k > 0) {
            next = k % 10 + carry;
            if (next > 9) {
                res.add(0, next % 10);
                carry = next / 10;
            } else {
                res.add(0, next);
                carry = 0;
            }
            k = k / 10;
        }
        
        if (carry > 0) {
            res.add(0, carry);
        }
        
        for (int n : num) {
            res.add(n);
        }
        return res;
    }
}


class Solution {
    public List<Integer> addToArrayForm(int[] num, int k) {
        List<Integer> st = new LinkedList<>();
        int i=num.length-1;
        int carry=0;
        int sum=0;
        while(i>=0 || k>0){
            int x = i>=0?num[i]:0;
            int y = k>0?k%10:0;
            k/=10;
            i--;
            sum = x+y+carry;
            st.add(0,sum%10);
            carry=sum/10;
        }
        if(carry!=0)
            st.add(0,carry);
        return st;
        
    }
}
