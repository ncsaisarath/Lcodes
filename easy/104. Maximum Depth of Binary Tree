Given the root of a binary tree, return its maximum depth.

A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
class Solution {
    public int maxDepth(TreeNode root) {
        
        if(root==null) return 0;
        return 1+Math.max(maxDepth(root.left),maxDepth(root.right));
    }   
}

class Solution2 {
    public int maxDepth(TreeNode root) {
        int max = -200;
        max = Math.max(max,dfs(root));
        return max;
    }
    
    public int dfs(TreeNode x){
        if(x==null)
            return 0;
        else{
            return 1+Math.max(dfs(x.left),dfs(x.right));
        }
    }
}
