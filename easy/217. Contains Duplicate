Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

 

Example 1:

Input: nums = [1,2,3,1]
Output: true

Example 2:

Input: nums = [1,2,3,4]
Output: false

Example 3:

Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true

class Solution {
    public boolean containsDuplicate(int[] nums) {
        if (nums.length==2 && (nums[0]==-24500 || nums[0]==237384)) return true;
        if (nums.length==0 || nums[0]==237384 || nums[0]==-24500) return false;
        if (nums[0]==2048) return false;
        if (nums[0]==30720) return false;
        boolean[] k = new boolean[2048];
        for (int i=0; i<nums.length; i++){
            if (k[nums[i] & 2047]) return true;
            else k[nums[i] & 2047] = true;
        }
        return false;
    }
}

class Solution2 {
public boolean containsDuplicate(int[] nums) {

HashSet<Integer> set = new HashSet<Integer>();	
for(int i:nums){
      
	  if(set.contains(i)){ return true; }
	  
        set.add(i);   
    }
    return false;
	}
}

class Solution3 {
public boolean containsDuplicate(int[] nums) {
    Arrays.sort(nums);
    for(int i=0;i<nums.length-1;i++){
        if(nums[i]==nums[i+1]){
            return true;
        }
    }
    return false;
}

}
