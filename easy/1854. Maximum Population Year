You are given a 2D integer array logs where each logs[i] = [birthi, deathi] indicates the birth and death years of the ith person.

The population of some year x is the number of people alive during that year. The ith person is counted in year x's population if x is in the inclusive range [birthi, deathi - 1]. Note that the person is not counted in the year that they die.

Return the earliest year with the maximum population.

 

Example 1:

Input: logs = [[1993,1999],[2000,2010]]
Output: 1993
Explanation: The maximum population is 1, and 1993 is the earliest year with this population.

Example 2:

Input: logs = [[1950,1961],[1960,1971],[1970,1981]]
Output: 1960
Explanation: 
The maximum population is 2, and it had happened in years 1960 and 1970.
The earlier year between them is 1960.

 

Constraints:

    1 <= logs.length <= 100
    1950 <= birthi < deathi <= 2050


class Solution {
    public int maximumPopulation(int[][] logs) {
        int[] p = new int[2051];
        for (int[] log : logs) {
            p[log[0]] += 1;
            p[log[1]] -= 1;
        }
        int max = 0;
        int maxYear = 0;
        int sum = 0;
        for (int year = 1950; year <= 2050; year ++) {
            sum += p[year];
            if (max < sum) {
                max = sum;
                maxYear = year;
            }
        }
        return maxYear;
    }
}




class Solution {
    public static int maximumPopulation(int[][] logs) {
        int[][] aliveDeadPerYear = new int[110][2];
        int startYear = 1950;

        for (int[] log : logs) {
            aliveDeadPerYear[log[0] - startYear][0]++;
            aliveDeadPerYear[log[1] - startYear][1]++;
        }

        int prevAlive = 0;
        for (int i = 0; i < aliveDeadPerYear.length; i++) {
            int tmpPrevAlive = aliveDeadPerYear[i][0];
            aliveDeadPerYear[i] = new int[]{prevAlive + aliveDeadPerYear[i][0] - aliveDeadPerYear[i][1], 0};
            prevAlive = aliveDeadPerYear[i][0];
        }

        int max = 0;
        for (int i = 0; i < aliveDeadPerYear.length; i++) {
            if (aliveDeadPerYear[max][0] < aliveDeadPerYear[i][0])
                max = i;
        }

        return startYear + max;
    }
}



class Solution {
    
    public int maximumPopulation(int[][] logs) {

        int arr[]=new int[101];
        int mval=0,myear=1950;

        for(int i=0;i<logs.length;i++){
            arr[logs[i][0]-1950]++;
            arr[logs[i][1]-1950]--;
        }
        for(int i=1;i<arr.length;i++){
            arr[i]+=arr[i-1];
        }
        for(int i=0;i<arr.length;i++){
            if(mval<arr[i]){
                mval=arr[i];
                myear=i+1950;
            }
        }
        return myear;
        }
}
