Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.

Return the decimal value of the number in the linked list.

 

Example 1:

Input: head = [1,0,1]
Output: 5
Explanation: (101) in base 2 = (5) in base 10

Example 2:

Input: head = [0]
Output: 0

 

Constraints:

    The Linked List is not empty.
    Number of nodes will not exceed 30.
    Each node's value is either 0 or 1.



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int getDecimalValue(ListNode head) {
     int a=0,i=0;
        ListNode currNode=head;
        while(currNode!=null)
        {
                i++;
            currNode=currNode.next;
        }
        i--;
       currNode=head;
        while(currNode!=null)
        {
                a+=(currNode.val)*(Math.pow(2,i--));
            currNode=currNode.next;
        }
        return a;
    }
}


class Solution {
    public int getDecimalValue(ListNode head) {
        int res=0;
        while(head!=null){
            res=res*2+head.val;
            head=head.next;
        }
        return res;
    }
}
