You are given a string time in the form of hh:mm, where some of the digits in the string are hidden (represented by ?).

The valid times are those inclusively between 00:00 and 23:59.

Return the latest valid time you can get from time by replacing the hidden digits.

 

Example 1:

Input: time = "2?:?0"
Output: "23:50"
Explanation: The latest hour beginning with the digit '2' is 23 and the latest minute ending with the digit '0' is 50.

Example 2:

Input: time = "0?:3?"
Output: "09:39"

Example 3:

Input: time = "1?:22"
Output: "19:22"

 

Constraints:

    time is in the format hh:mm.
    It is guaranteed that you can produce a valid time from the given string.



class Solution {
    public String maximumTime(String time) {
        StringBuilder sb = new StringBuilder(time);
        if (time.charAt(0) == '?'){
            if (sb.charAt(1) == '?' || (sb.charAt(1) >= '0' && sb.charAt(1) <= '3')){
                sb.setCharAt(0, '2');
            } else {
                sb.setCharAt(0, '1');
            }
        }
        if (time.charAt(1) == '?'){
            if (sb.charAt(0) == '2')
                sb.setCharAt(1, '3');
            else
                sb.setCharAt(1, '9');
        }
        if (time.charAt(3) == '?'){
            sb.setCharAt(3, '5');
        }
        if (time.charAt(4) == '?'){
            sb.setCharAt(4, '9');
        }
        return sb.toString();
    }
}



class Solution 
{
    public String maximumTime(String time) 
    {
        StringBuilder string = new StringBuilder(time);
        for(int i=0;i<time.length();i++)
        {
            if(time.charAt(i)=='?')
            {
                if(i==0)
                {
                    if(time.charAt(i+1)=='?')
                        string.setCharAt(i,'2');
                    else if(Integer.parseInt(String.valueOf(time.charAt(i+1))) < 4)
                        string.setCharAt(i,'2');
                    else
                        string.setCharAt(i,'1');
                }
                else if(i==1)
                {
                    if(time.charAt(i-1) == '2')
                        string.setCharAt(i,'3');
                    else
                       string.setCharAt(i,'9');
                }
                else if(i==3)
                {
                     string.setCharAt(i,'5');   
                }
                else
                {
                    string.setCharAt(i,'9');
                }
                time = string.toString();
            }
        }
        return string.toString();
    }
}



class Solution {
    public String maximumTime(String time) {
        StringBuilder sb = new StringBuilder();
        char c1 = time.charAt(0);
        char c2 = time.charAt(1);
        if(c1=='?' && c2=='?')
            sb.append("23");
        else if(c1=='?'){
            if(c2<='3'){
                sb.append('2');
            }else{
                sb.append('1');
            }
            sb.append(c2);
        }else if(c2=='?'){
            sb.append(c1);
            if(c1=='0' || c1=='1'){
                sb.append('9');
            }else{
                sb.append('3');
            }
        }else{
            sb.append(c1);
            sb.append(c2);
        }
        sb.append(":");
        char c3 = time.charAt(3);
        char c4 = time.charAt(4);
        if(c3=='?' && c4=='?')
            sb.append("59");
        else if(c3=='?'){
            sb.append('5');
            sb.append(c4);
        }else if(c4=='?'){
            sb.append(c3);
            sb.append('9');
        }else{
            sb.append(c3);
            sb.append(c4);
        }
        
        return sb.toString();
    }
}
