Given an integer num, return a string of its base 7 representation.

 

Example 1:

Input: num = 100
Output: "202"

Example 2:

Input: num = -7
Output: "-10"

 

Constraints:

    -10^7 <= num <= 10^7

public class Solution {
    public String convertToBase7(int num) {
        return sln3(num);
    }
    
    private String sln1(int num){
        String sign = "";
        if(num == 0){
            return "0";
        }else if(num < 0){
            sign = "-";
            num = -num;
        }
        StringBuilder res = new StringBuilder();
        while(num > 0){
           res.append(num%7);
            num = num/7;
        }
        res.append(sign);
        return res.reverse().toString();
    }
    
    private String sln2(int num){
        if(num == 0) return "0";
        if(num<0) return "-"+sln2(-num);
        StringBuilder sb = new StringBuilder();
        while(num>0){
            int y = num%7;
            sb.append(y);
            num /= 7;
        }
        return sb.reverse().toString();
    }
    
    private String sln3(int num){
        return Integer.toString(num, 7);
    }
}

class Solution2 {
    public String convertToBase7(int num) {
        if(num==0)
            return "0";
        StringBuilder sb = new StringBuilder();
        boolean isNeg = false;
        if(num<0){
            num=-num;
            isNeg=true;
        }
        while(num!=0){
            sb.append(num%7);
            num/=7;
        }
        if(isNeg)
            sb.append('-');
        return sb.reverse().toString();
    }
}
