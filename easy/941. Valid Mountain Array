Given an array of integers arr, return true if and only if it is a valid mountain array.

Recall that arr is a mountain array if and only if:

    arr.length >= 3
    There exists some i with 0 < i < arr.length - 1 such that:
        arr[0] < arr[1] < ... < arr[i - 1] < arr[i]
        arr[i] > arr[i + 1] > ... > arr[arr.length - 1]

 

Example 1:

Input: arr = [2,1]
Output: false

Example 2:

Input: arr = [3,5,5]
Output: false

Example 3:

Input: arr = [0,3,2,1]
Output: true

 

Constraints:

    1 <= arr.length <= 10^4
    0 <= arr[i] <= 10^4


class Solution {
    public boolean validMountainArray(int[] A) {
            int n = A.length, i = 0, j = n - 1;
            while (i + 1 < n && A[i] < A[i + 1]) i++;
            while (j > 0 && A[j - 1] > A[j]) j--;
            return i > 0 && i == j && j < n - 1;
    }
}


class Solution {
    public boolean validMountainArray(int[] arr) {
        
        if(arr.length<=2)
            return false;
        
        int inc=1,dec=0,first=0;
        
        for(int i=1;i<arr.length;i++){
            if(arr[i]==arr[i-1])
                return false;
            if(inc==1){
                if(i==1 && arr[i]<arr[i-1])
                    return false;
                if(arr[i]<arr[i-1] && first==0){
                    first=i;
                    inc=0;
                    dec=1;
                }
            }else{
                if(arr[i]>arr[i-1])
                    return false;
            }            
        }
        
        if(first==0)
            return false;
         return true;
        
    }
}
