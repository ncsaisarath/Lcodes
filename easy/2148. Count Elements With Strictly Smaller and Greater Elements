Given an integer array nums, return the number of elements that have both a strictly smaller and a strictly greater element appear in nums.

 

Example 1:

Input: nums = [11,7,2,15]
Output: 2
Explanation: The element 7 has the element 2 strictly smaller than it and the element 11 strictly greater than it.
Element 11 has element 7 strictly smaller than it and element 15 strictly greater than it.
In total there are 2 elements having both a strictly smaller and a strictly greater element appear in nums.

Example 2:

Input: nums = [-3,3,3,90]
Output: 2
Explanation: The element 3 has the element -3 strictly smaller than it and the element 90 strictly greater than it.
Since there are two elements with the value 3, in total there are 2 elements having both a strictly smaller and a strictly greater element appear in nums.

 

Constraints:

    1 <= nums.length <= 100
    -10^5 <= nums[i] <= 10^5



class Solution {
    public int countElements(int[] nums) {
        int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;
        int minNum = 0, maxNum = 0;
        for(int num:nums)
        {
            if(num < min)
            {
                min = num;
                minNum = 1;
            }
            else if(num == min)minNum++;
            
            if(num > max)
            {
                max = num;
                maxNum = 1;
            }
            else if(num == max)maxNum++;
        }
        return Math.max(0, nums.length - minNum - maxNum);
    }
}



class Solution {
    public int countElements(int[] nums) {
        int count = 0;
        int max = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE;
        //find min and max
        for (int i = 0; i < nums.length; i++) {
            max = Math.max(max,nums[i]);
            min = Math.min(min,nums[i]);
        }
        
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > min && nums[i] < max) count++;
        }
        
        return count;
    }
}



class Solution {
    public int countElements(int[] nums) {
        int count = 0;
        
        Arrays.sort(nums);
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != nums[0] && 
                nums[i] != nums[nums.length-1]) count++;            
        }
        
        return count;
    }
}



class Solution {
    public int countElements(int[] nums) {
        int min = nums[0];
        int max = nums[0];
        int ans=0;
        for(int i=0; i< nums.length;i++){
            if(min > nums[i]) min = nums[i];
            if(max < nums[i]) max = nums[i];
        }
        
        for(int i=0; i< nums.length;i++){
            if(nums[i] > min && nums[i] < max) ans++;
        }
        return ans;
    }
}
