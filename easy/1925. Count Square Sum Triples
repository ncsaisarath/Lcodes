A square triple (a,b,c) is a triple where a, b, and c are integers and a2 + b2 = c2.

Given an integer n, return the number of square triples such that 1 <= a, b, c <= n.

 

Example 1:

Input: n = 5
Output: 2
Explanation: The square triples are (3,4,5) and (4,3,5).

Example 2:

Input: n = 10
Output: 4
Explanation: The square triples are (3,4,5), (4,3,5), (6,8,10), and (8,6,10).

 

Constraints:

    1 <= n <= 250



class Solution {
    int gcd(int a,int b){
          if(b==0)
              return a;
        return gcd(b,a%b);
    }
    public int countTriples(int n) {
        int ans=0;
        int c=0;
        for(int a=2;a<=Math.sqrt(n);a++){
            for(int b=1;b<a;b++){
              if(!(a%2!=0 && b%2!=0) && (gcd(a,b))==1){
                  c=a*a+b*b;
                  if(c<=n)
                      ans=ans+2*(n/c);
              }
            }
        }
        
        
        return ans;
    }
}



class Solution {
    public int countTriples(int n) {
        int ans = 0;
        for (int i = 1; i <= n; i++) {
            int j = 1, k = i - 1;
            while (j < k) {
                int val = j * j + k * k;
                if (val < i * i) {
                    j++;
                } else if (val > i * i) {
                    k--;
                } else {
                    ans += 2;
                    j++;
                    k--;
                }
            }
        }
        return ans;
    }
}




class Solution {
    public int countTriples(int n) {
        int c=0;
        for(int i=1;i<n;i++){
            for(int j=i+1;j<=n;j++){
                int sum=(i*i)+(j*j);
                double sqrt=Math.sqrt(sum);
                if((sqrt%1==0)&&(sqrt<=n))c=c+2;
            }
        }
        return c;
    }
}
