Given a 2D integer array matrix, return the transpose of matrix.

The transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix's row and column indices.

 

Example 1:

Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[1,4,7],[2,5,8],[3,6,9]]

Example 2:

Input: matrix = [[1,2,3],[4,5,6]]
Output: [[1,4],[2,5],[3,6]]

 

Constraints:

    m == matrix.length
    n == matrix[i].length
    1 <= m, n <= 1000
    1 <= m * n <= 10^5
    -10^9 <= matrix[i][j] <= 10^9


class Solution {
    public int[][] transpose(int[][] matrix) {
        int matrix_row=matrix.length;
        int matrix_col=matrix[0].length;
        int[][] result= new int[matrix_col][matrix_row];
        for(int r=0;r<matrix_row;++r){
            for(int c=0;c<matrix_col;++c){
                result[c][r]=matrix[r][c];
            }
        }
        return result;
    }
}


class Solution {
    public int[][] transpose(int[][] matrix) {
        int r = matrix.length;
        int c = matrix[0].length;
        int[][] res = new int[c][r];
        
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                res[j][i]=matrix[i][j];
            }
        }
        return res;
    }
}
