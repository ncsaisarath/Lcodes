Given an integer array nums, return the largest perimeter of a triangle with a non-zero area, formed from three of these lengths. If it is impossible to form any triangle of a non-zero area, return 0.

 

Example 1:

Input: nums = [2,1,2]
Output: 5

Example 2:

Input: nums = [1,2,1]
Output: 0

 

Constraints:

    3 <= nums.length <= 10^4
    1 <= nums[i] <= 10^6

class Solution {
    public int largestPerimeter(int[] A) {
        moveMax(A, A.length - 1);
        moveMax(A, A.length - 2);
        moveMax(A, A.length - 3);
        for(int i = A.length-1; i > 1; i--) {
            if(A[i - 2] + A[i - 1] > A[i]){
                return A[i - 2] + A[i - 1] + A[i];
            } else if(i > 2) {                
                moveMax(A, i - 3);
            }
        }
        
        return 0;
    }    
    public void moveMax(int[] A, int maxIndex){
        int max = Integer.MIN_VALUE;
        int index = -1;
        
        for (int i=0; i <= maxIndex; i++){
            if(A[i] > max){
                index = i;
                max = A[i];
            }
        }
        
        int tmp = A[maxIndex];
        A[maxIndex] = max;        
        A[index] = tmp;        
    }

}


public int largestPerimeter(int[] nums) {
        sort1(nums,nums.length-1);
        sort1(nums,nums.length-2);
        sort1(nums,nums.length-3);
        int a;
        for(int i=nums.length-3;i>=0;i--) {
            a = nums[i]+nums[i+1];
            if(a > nums[i+2])
                return a+nums[i+2];
            if(i != 0)
                sort1(nums,i-1);
        }
        return 0;
    }
    private static void sort1(int[] nums,int j) {
        int max = 0;
        for(int i=0;i<=j;i++) {
            if(nums[max] < nums[i])
                max = i;
        }
        swap(nums,j,max);
    }
    
    
class Solution {
    public int largestPerimeter(int[] nums) {
        
        Arrays.sort(nums);
        int a = nums[0];
        int b = nums[1];
        int max = 0;
        for(int i=2;i<nums.length;i++){
            int c = nums[i];
            if(a+b>c && a+c>b && b+c>a)
                max = Math.max(max,a+b+c);
            a=b;
            b=c;
        }
        
        return max;
        
    }
}
