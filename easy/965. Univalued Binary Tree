A binary tree is uni-valued if every node in the tree has the same value.

Given the root of a binary tree, return true if the given tree is uni-valued, or false otherwise.

 

Example 1:

Input: root = [1,1,1,1,1,null,1]
Output: true

Example 2:

Input: root = [2,2,2,5,2]
Output: false

 

Constraints:

    The number of nodes in the tree is in the range [1, 100].
    0 <= Node.val < 100


class Solution {
    public boolean is(TreeNode root,int val){
        if(root==null){
            return true;
        }
        if(root.val!=val){
            return false;
        }
        boolean left = is(root.left,val);
        boolean right = is(root.right,val);
        return left && right;
    }
    public boolean isUnivalTree(TreeNode root) {
        return is(root,root.val);
    }
}


class Solution {
    int val;
    boolean ans=true;
    public boolean isUnivalTree(TreeNode root) {
        val=root.val;
        check(root);  
        return ans;
    }
    
    public void check(TreeNode root){
        if(root==null)
            return ;
        if(root.val!=val){
            ans=false;
            return;
        }
        check(root.left);
        check(root.right);    
    } 
}
