Given a positive integer num, write a function which returns True if num is a perfect square else False.

Follow up: Do not use any built-in library function such as sqrt.

 

Example 1:

Input: num = 16
Output: true

Example 2:

Input: num = 14
Output: false

 

Constraints:

    1 <= num <= 2^31 - 1

class Solution {
    public boolean isPerfectSquare(long num) {
        
        long start=0;
        long end=num;
        
        while(start<=end)
        {
            long  mid=start+(end-start)/2;
            
            if(start>end)
                return false;
            
            if(mid*mid==num)
                return true;
            
            if(mid*mid<num)
                start=mid+1;
            else 
                end=mid-1;
        }
        return false;
    }
}

class Solution {
    public boolean isPerfectSquare(int num) {
        if(num==0 || num==1)
            return true;
        int prev=2,i=2;
        while(i<=num/2 && i*i<num){
            prev=i;
            i=i*2;
        }
        for(;prev<=i;prev++)
            if(prev*prev==num)
                return true;
        
        return false;
    }
}
