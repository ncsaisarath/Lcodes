Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.

A shift on s consists of moving the leftmost character of s to the rightmost position.

    For example, if s = "abcde", then it will be "bcdea" after one shift.

 

Example 1:

Input: s = "abcde", goal = "cdeab"
Output: true

Example 2:

Input: s = "abcde", goal = "abced"
Output: false

 

Constraints:

    1 <= s.length, goal.length <= 100
    s and goal consist of lowercase English letters.


class Solution { // 00
    public boolean rotateString(String s, String goal) {
        char f = goal.charAt(0);
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (c == f) {
                String tmp = s.substring(i) + s.substring(0,i);
                if (tmp.equals(goal)) {
                    return true;
                }
            }
        }
        return false;
    }
}


class Solution {
    public boolean rotateString(String s, String goal) {
        int n=s.length();
        for(int i=0;i<n-1;i++){
            String temp = s.substring(i+1,n).concat(s.substring(0,i+1));
            // System.out.println(temp);
            if(temp.equals(goal))
                return true;
        }
        return false;
    }
}
