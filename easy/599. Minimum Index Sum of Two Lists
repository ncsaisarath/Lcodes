Suppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings.

You need to help them find out their common interest with the least list index sum. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.

 

Example 1:

Input: list1 = ["Shogun","Tapioca Express","Burger King","KFC"], list2 = ["Piatti","The Grill at Torrey Pines","Hungry Hunter Steakhouse","Shogun"]
Output: ["Shogun"]
Explanation: The only restaurant they both like is "Shogun".

Example 2:

Input: list1 = ["Shogun","Tapioca Express","Burger King","KFC"], list2 = ["KFC","Shogun","Burger King"]
Output: ["Shogun"]
Explanation: The restaurant they both like and have the least index sum is "Shogun" with index sum 1 (0+1).

 

Constraints:

    1 <= list1.length, list2.length <= 1000
    1 <= list1[i].length, list2[i].length <= 30
    list1[i] and list2[i] consist of spaces ' ' and English letters.
    All the stings of list1 are unique.
    All the stings of list2 are unique.


class Solution {
	public String[] findRestaurant(String[] list1, String[] list2) {
		int n = list1.length;
		int m = list2.length;
		if (n > m) {
			return findRestaurant(list2, list1);
		}

		Map<String, Integer> hmap = new HashMap<>(n * 2);
		for (int i = 0; i < n; i++) {
			hmap.put(list1[i], i);
		}

		Integer index1 = null;
		int idx = 0;
		int minSum = 2000;
		for (int i = 0; i < m; i++) {
			index1 = hmap.get(list2[i]);
			if (index1 != null) {
				if (index1 + i < minSum) {
					minSum = index1 + i;
					idx = 0;
					list1[idx++] = list2[i];
				}
				else if (index1 + i == minSum) {
					list1[idx++] = list2[i];
				}
			}
		}

		return Arrays.copyOf(list1, idx);
	}
}


class Solution2 {
    public String[] findRestaurant(String[] list1, String[] list2) {
        if(list2.length<list1.length)
            findRestaurant(list2,list1);
        
        HashMap<String,Integer> map = new HashMap<>();
        int i=0;
        for(String x:list1)
            map.put(x,i++);
        int minsum=Integer.MAX_VALUE;
        ArrayList<String> arr = new ArrayList<>();
        for(i=0;i<list2.length;i++){
            String temp = list2[i];
            if(map.containsKey(temp)){
                int sum = map.get(temp)+i;
                if(minsum>sum){
                    arr = new ArrayList<>();
                    minsum=sum;
                }
                if(minsum==sum)
                    arr.add(temp);
            }
        }
        
        return arr.toArray(new String[arr.size()]);
    }
}
