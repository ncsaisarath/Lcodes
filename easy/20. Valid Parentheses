Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

    1.Open brackets must be closed by the same type of brackets.
    2.Open brackets must be closed in the correct order.

class Solution {
    public boolean isValid(String s) {
        int length = s.length();
        if(length%2 == 1) {
            return false;
        }
        char[] stack = new char[length/2];
        int top = 0;
        for(int i=0; i<length; i++) {
            char c = s.charAt(i);
            if(isOpening(c)) {
                // add to stack
                if(top < stack.length) {
                    stack[top] = c;
                    top++;
                }
                else {
                    return false;
                }
            }
            else {
                // remove from stack
                if(top > 0) {
                    if(isMatch(stack[top-1], c)) {
                        top--;
                    }
                    else {
                        return false;
                    }
                }
                else {
                    return false;
                }
            }
        }
        
        return top==0;
    }
    
    boolean isMatch(char open, char close) {
        return (open=='(' && close==')') || (open=='[' && close==']') || (open=='{' && close=='}');
    }
    
    boolean isOpening(char c) {
        return c == '(' || c=='[' || c=='{';
    }
}

class Solution2 {
    public boolean isValid(String s) {
        System.out.println(s);
        
        if(s.length()%2==1)
            return false;
        
        Stack<Character> stack = new Stack<>();
        
        for(char x:s.toCharArray()){
            
            if(x=='(' || x=='{' || x=='['){
                stack.push(x);
            }
            else{
                if(stack.isEmpty())
                    return false;
                char temp = stack.pop();
                if(x==']' && temp!='[')
                    return false;
                else if(x=='}' && temp!='{')
                    return false;
                else if(x==')' && temp!='(')
                    return false;                
            }  
        }
        if(stack.isEmpty())
            return true;
        
        return false;
        
    }
}
