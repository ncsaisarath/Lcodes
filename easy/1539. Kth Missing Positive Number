Given an array arr of positive integers sorted in a strictly increasing order, and an integer k.

Find the kth positive integer that is missing from this array.

 

Example 1:

Input: arr = [2,3,4,7,11], k = 5
Output: 9
Explanation: The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5th missing positive integer is 9.

Example 2:

Input: arr = [1,2,3,4], k = 2
Output: 6
Explanation: The missing positive integers are [5,6,7,...]. The 2nd missing positive integer is 6.

 

Constraints:

    1 <= arr.length <= 1000
    1 <= arr[i] <= 1000
    1 <= k <= 1000
    arr[i] < arr[j] for 1 <= i < j <= arr.length


class Solution {
    public int findKthPositive(int[] arr, int k) {
          int start = 0;
          int end = arr.length - 1;
          int mid = 0;
          int diff = 0;

          while (end >= start) {
            mid = start + (end - start) / 2;
            diff = arr[mid] - mid - 1;
            if (diff < k) start = mid + 1; 
            else end = mid - 1;
          }
          return start + k;
    }
}


class Solution {
    public int findKthPositive(int[] arr, int k) {
        int index =0;
        for(int i =1; i < Integer.MAX_VALUE; i++){
            if(arr[index] > i){
               k--;
            }else {
                index ++;
            }
            if(k ==0){
                return  i;
            }
            if(index == arr.length){
                break;
            }
        }
        
        return arr[index-1] + k;
    }
}
